name: Node.js Package

on:
  push:
    branches:
      - main
      - develop

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_IMAGE_NAME }}
          platforms: linux/amd64,linux/arm64

  deploy-prod:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Production Deploy (green)
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST_GREEN }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd ~/skufestival || exit 1
            docker compose pull react
            docker compose up -d --no-deps react
            docker image prune -a -f

  deploy-develop:
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Develop Deploy (blue + nginx)
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST_BLUE }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd ~/skufestival || exit 1
            docker compose pull react
            docker compose up -d --no-deps react
            docker image prune -a -f
