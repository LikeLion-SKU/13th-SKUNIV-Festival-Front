# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages

name: Node.js Package

on:
  push:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Docker image upload to docker hub
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_TOKEN }}
          docker build -t ${{ secrets.DOCKER_IMAGE_NAME }} .
          docker push ${{ secrets.DOCKER_IMAGE_NAME }}

    
  # main branch
  deploy-prod:
    if: github.ref == 'refs/heads/main' && (github.event.pull_request.merged == true || github.event_name == 'push')
    needs: build
    runs-on: ubuntu-20.04

    steps:
      - name: 프로덕션 배포 (green)
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST_GREEN }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd ~/skufestival || exit 1
            docker compose down
            docker compose up --build -d

  # develop branch
  deploy-develop:
    if: github.ref == 'refs/heads/develop' && (github.event.pull_request.merged == true || github.event_name == 'push')
    needs: build
    runs-on: ubuntu-20.04

    steps:
      - name: 디벨롭 배포 (blue + nginx)
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST_BLUE }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd ~/skufestival || exit 1
            docker compose down
            docker compose up --build -d
    
    

